<?xml version="1.0" ?>
<Node dt="0.01" gravity="0 0 0" name="root">
    <VisualStyle displayFlags="showVisualModels hideBehaviorModels hideCollisionModels" />
    <DefaultVisualManagerLoop/>
    
    <RequiredPlugin name="SofaBoundaryCondition"/> <!-- Needed to use components [FixedConstraint] -->
    <RequiredPlugin name="SofaConstraint"/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, LinearSolverConstraintCorrection, LocalMinDistance] -->
    <RequiredPlugin name="SofaDeformable"/> <!-- Needed to use components [RestShapeSpringsForceField] -->
    <RequiredPlugin name="SofaEngine"/> <!-- Needed to use components [BoxROI] -->
    <RequiredPlugin name="SofaGeneralRigid"/> <!-- Needed to use components [ArticulatedHierarchyContainer, ArticulatedSystemMapping, Articulation, ArticulationCenter] -->
    <RequiredPlugin name="SofaImplicitOdeSolver"/> <!-- Needed to use components [EulerImplicitSolver] -->
    <RequiredPlugin name="SofaLoader"/> <!-- Needed to use components [MeshObjLoader] -->
    <RequiredPlugin name="SofaMeshCollision"/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel] -->
    <RequiredPlugin name="SofaOpenglVisual"/> <!-- Needed to use components [OglModel] -->
    <RequiredPlugin name="SofaRigid"/> <!-- Needed to use components [RigidMapping] -->
    <RequiredPlugin name="SofaSimpleFem"/> <!-- Needed to use components [TetrahedronFEMForceField] -->
    <RequiredPlugin name="SofaSparseSolver"/> <!-- Needed to use components [SparseLDLSolver] -->
    <RequiredPlugin name="SofaTopologyMapping"/> <!-- Needed to use components [Hexa2TetraTopologicalMapping] -->
    <RequiredPlugin name="SofaHapticAvatar"/>
    <RequiredPlugin name='SofaHaptics'/>
    
    <DefaultPipeline name="pipeline" depth="6" verbose="0"/>
    <BruteForceBroadPhase />
    <BVHNarrowPhase />
    <DefaultContactManager name="response" response="FrictionContactConstraint" />
    <LocalMinDistance name="proximity" alarmDistance="2" contactDistance="0.5" />
    <FreeMotionAnimationLoop/>
    <LCPConstraintSolver tolerance="0.001" maxIt="10000"/>

    <!-- Include Device driver and 3D model -->
    <include href="ArticulatedGrasper.xml" />
    
    
    <!-- Add obstacles -->    
    <Node name="Cactus">
        <MeshObjLoader name="loader" filename="./mesh/cactus.obj" translation="0 130 100" rotation="90 0 0" scale3d="1.2 1.2 1.2"/>
        <SparseGridRamificationTopology name="grid" n="10 10 10" src="@./loader" nbVirtualFinerLevels="3" finestConnectivity="0"/>
            
        <Node name="Cactus">
            <EulerImplicitSolver rayleighMass="0.01" rayleighStiffness="0.1" /> 
            <SparseLDLSolver template="CompressedRowSparseMatrixMat3x3d"/>
            
            <MechanicalObject name="Volume" position="@../grid.position"/>
            <TetrahedronSetTopologyContainer name="Tetra_topo" />
            <TetrahedronSetTopologyModifier name="Tetra_Modifier" />
            <TetrahedronSetGeometryAlgorithms name="Tetra_GeomAlgo" template="Vec3d" />
            <Hexa2TetraTopologicalMapping input="@../grid" output="@Tetra_topo" />

            <BoxROI name="boxRoi1" box="-100 100 20  100 200 80" drawBoxes="1"/>
            <FixedConstraint indices="@boxRoi1.indices" />
            
            <TetrahedronFEMForceField name="FEM" youngModulus="3500" poissonRatio="0.3" method="large" />
            <UniformMass totalMass="1.0" />
            <LinearSolverConstraintCorrection />
            
            <Node name="Surface">
                <MeshTopology src="@../../loader" />
                <MechanicalObject name="CollisModel" position="@../../loader.position"/>
                
                <TriangleCollisionModel bothSide="false" group="1"/>
                <LineCollisionModel group="1" />
                <PointCollisionModel group="1"/>
                <BarycentricMapping input="@.." output="@." />
                
                <Node name="VisuSurface">
                    <OglModel name="Visual" color="green" />
                    <IdentityMapping input="@.." output="@Visual" />
                </Node>
            </Node>
        </Node>
    </Node>    
</Node>
